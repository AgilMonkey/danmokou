<#> warnprefix
pattern({
	boss simp.kasen2
})
phase(0)
	paction(0)
		shift-phase-to(1)
	

<!> type(spell, `Apocalypse Clock`) #{
<!> hpi(12000, 5)
<!> spellcutin 0
phase(40)
	paction 0
	
!{ oppPlayerXMult()
	if(> v2x(Lplayer) 0, -1, 1)
!}

!{ acBezierSwing(sideMult, depth, tOffset)
	nroffset ease(out-sine, 2, bezier(
				pxy(@(acCenterX, &acGtrLoop) + 6 * %sideMult, 4.5), ## if(= %sideMult 1, 2, 4.5) ##@(acPlayerXMult, &acGtrLoop)
				pxy(@(acCenterX, &acGtrLoop), %depth), ##-3
				pxy(@(acCenterX, &acGtrLoop) - 6 * %sideMult, 4.5), ## if(= %sideMult 1, 4.5, 2)
				(t - %tOffset) / 2 ##time
			) 
			## clamp(0, 1, 0.25 * ln((t - %tOffset) * 0.5) + 1)
			## 0.5 * clamp(0, 2, ln(t - %tOffset)) + 2 
			## (t - %tOffset) / 2 
		)
!}

!{ acBezierSwing3(tOffset)
	nroffset ease(out-sine, 2, bezier(
				pxy(@(acCenterX, &acGtrLoop) + 6 * @(acPlayerXMult, &acGtrLoop), 4.5),
				@(chloc, 0) + cy(-4.5), 
				Lbeh(kasen) - px(2 * @(acCenterX, &acGtrLoop)), ##pxy(v2x(Lbeh(alice2)) - @(acCenterX, &acGtrLoop), v2y(Lbeh(alice2))),
				(t - %tOffset) / 2 ##time
			)
		)
!}

!{ acSwingLaser(swDepth, swLen, swTime, swSideMult)
	sync glaser-purple/b <> gsr {
		##start { acCenterX =f v2x(Lbeh(alice2)) }
		root zero
	} laser(nroffset cx 0, %swTime, 0, { ##3
			s(0.5)
			dynamic ##$acParabolaSwing(@(acPlayerXMult, &acGtrLoop) * %swSideMult, %swDepth)
				$acBezierSwing(@(acPlayerXMult, &acGtrLoop) * %swSideMult, %swDepth, 0)
			stagger 0.2
			length(%swLen) ##3 ##varlength(10, dist(@(eloc, p), &dollOrigin))
			dsfx
		})
!}

!{ acTargetedSpam()
	async ellipse-purple/w <> 
		gcr { times(10) wait(0.1s) } 
		gsr { times(3) center spread(<15>) target(ra, Lplayer) } 
		s rvelocity px(min(5 * (t * t) - 3, 8))
!}

	bullet-control(persist, scircle-purple/w, batch(> t 2, {
		sm(_, async arrow-green/w <110> girepeat {
				wait(0.1s)
				times(3) 
				sfx(x-fire-burst-1)
				rv2incr(<-20>)
				root loc
			} gcr {
				times(2)
				wait(0.1s)
				bindItr(itr2)
			} addtime 0.5s gsr {
				times(2)
				center
				spread(<20>)
			} s rvelocity if(> t 0.5, px((&itr2 + 2) * 1.5), zero)
		)
		softcull(cwheel-purple/w, _)
	}))
	
	bullet-control(persist, arrow-green/w, batch(> t 1, {
		sm(_, async arrow-blue/w <-180> addtime 1s gsr {
				times(1)
			} s rvelocity if(> t 1, cx(3), zero)
		)
		sfx(x-transform-1, _)
		cull(_)
		##softcull(cwheel-green/w, _)
	}))
	
	bullet-control(persist, ellipse-purple/w, batch(onlyonce(< y ymin), {
		sm(_, async ellipse-black/w <90> addtime 1s gsr {
				times(1)
				root loc
				target(a, Lplayer)
			} s rvelocity if(> t 1, cx(8), zero)
		)
		sfx(x-transform-3, _)
		cull(_)
	}))
	
	gtrepeat {
		times(_) ## repeat indefinitely
		wait-child
		sequential
		bindItr(acGtrLoop)
	}
	{
		move-target(1, io-sine, pxy(if (> v2x(Lplayer) 0, -0.75, 0.75), 2.5))
		savef acCenterX &acGtrLoop v2x(Lbeh(kasen))
		savef acPlayerXMult &acGtrLoop $oppPlayerXMult()
		
		##gtr { times(2) wait-child sequential bindItr(acSwing) }
		$acSwingLaser(-3, 2, 7, 1)
		
		sync icrow <> gsr {
				root zero
			} summon if (< t 2)
					$acBezierSwing(@(acPlayerXMult, &acGtrLoop), -3, 0) 
					if (< t 4)
						$acBezierSwing(@(acPlayerXMult, &acGtrLoop) * -1, -8, 2)
						if (< t 6)
							$acBezierSwing3(4)
							rvelocity cx 0
				gtrepeat {
						times(1)
						wait-child
						sequential
					} {
						##paction 2
						async scircle-black/w <> gcr { times(30) wait(0.15s) sfx(x-fire-burst-2) } gsr { } s rvelocity py(0.1 + -0.07 * t)
						async scircle-purple/w <> gcr { times(10) wait(0.2s) sfx(x-fire-star-3) } gsr { } s rvelocity py(0.1 + -0.07 * t)
						
						paction 2
						$acTargetedSpam()
						paction 1
					} 
				{ } ##(async circle-blue/w <> gsr { times(10) circle } s tprot cx 2)
		
		paction 2
		$acSwingLaser(-8, 2, 5, -1)
		
		paction 2
		crosshair crosshair pxy(v2x Lplayer, -3) 0 2 chloc 0 ##p ##(Lplayer + cy(1))
		##~ paction 1
		sync glaser-purple/b <> gsr {
			root zero
		} laser(nroffset cx 0, 3, 0, {
				s(0.5)
				dynamic ##$acBezierSwing(@(acPlayerXMult, &acGtrLoop) * %swSideMult, %swDepth, 0)
					$acBezierSwing3(0)
				stagger 0.2
				length(2) ##3 ##varlength(10, dist(@(eloc, p), &dollOrigin))
				dsfx
			})
		
		paction 0.5
		sync icrow <> gsr {
				##root zero
			} summon if (< t 2) 
					rvelocity px(-0.5 * @(acPlayerXMult, &acGtrLoop))
					rvelocity zero
				gtrepeat {
						times(1)
						wait-child
						sequential
					} {
						paction 2
						$acTargetedSpam()
						paction 1
					} 
				{ }
		
		paction 1
		dangerbot
		paction 2
	}
#}	

<!> type(non, `Danmokou Chimera`)
<!> hp(1000)
phase(0)
	paction 0
		position -2 0
		async crow <> gsr {
			start x =f 2
		} summon
			tprot px &x
			stall
			{ hp 200 }
		sync danger <-1.7;-6:> gsr2 2 <3.4;:> { root zero } summonsup tpnrot py lerp3 1 1.5 2 2.5 t 2.2 0 -2 stall


<!> type(non, `Danmokou Chimera`)
<!> hp(1000)
<!> photo 5
phase(34)
	paction 0
		async fireball-*/w <> gcr2 20 _ <> {
			color { red green blue yellow orange purple  }
		} gsr2c 60 {
			offset(angle(1h * &times * &pi))
		} s rvelocity cx 3

<!> type(spell, `Miracle Mima`)
<!> hp(1000)
<!> root(0, 1)
phase(40)
	paction(0)
		async lellipse-*/w <> gcrepeat {
			wait(3s)
			times(_)
			sfx(x-fire-burst-1)
		} gsrepeat {
			times(8)
			circle
			color({ red pink purple blue teal green yellow orange })
            bindItr(colorIndex)
            expose({ f colorIndex })
		} s(rvelocity(cx(3)))
		bullet-control(persist, lellipse-*/w, batch(> t 0.7, {
			sm(_, async ellipse-*/w <> gcrepeat {
				wait(12)
				times(6)
				rv2incr(<0.4;:>)
				sfx(x-transform-1)
				colorf({ red pink purple blue teal green yellow orange }, &colorIndex)
			} gsrepeat {
				times(29)
				circle
			} s(rvelocity(px(lerpt(0.3, 1.4, 0, 2.6)))))
			cull(_)
		}))
		
phase 0
	paction 0
		position(0, 1)
		sync(fireball-green/w, <0;0:2;0:0>, simp(rvelocity(cxy(0, -2))))

<!> hp 4000
phase 0
	paction 0
		position 0 1.5
## 1.618 = cos 18 / sin 36
!!{ rtod 1.618
!!{ group 20
!!{ rad 1
		async sakura-red/w <90> gcrepeat {
			wait(1)
			times(5 * $group)
			preloop {
				rv2.rxy =v2 lerp(0, $group, mod($group, t), 
					rx($rad, 144 * (t // $group)),
					rx($rad, 144 * ++ (t // $group)))
			}
			bindItr(ind)
		} gsrepeat {
			times(5)
			preloop {
				anchor =f (360 * t / &times)
			}
		} s(if(<(t + &st, 2.1), 
			roffset(lerpsmooth(out-sine, 1, 2, t + &st, zero, rx($rad * $rtod, &anchor))), 
			rvelocity(rx(
			lerp(2.3, 4, t + &st, 0, 1.2), 
			140 + 144 * &ind / $group))))
			
		async circle-blue/ <-90> gcrepeat {
!!{ group 20
!!{ rad 1.3
			wait(1)
			times(5 * $group)
			preloop {
				rv2.rxy =v2 lerp(0, $group, mod($group, t), 
					rx($rad, 144 * (t // $group)),
					rx($rad, 144 * ++ (t // $group))
				)
			}
			bindItr(ind)
		} gsrepeat {
			times(5)
			preloop {
				anchor =f (360 * t / &times)
			}
		} s(if(<(t + &st, 2.1), 
			roffset(lerpsmooth(out-sine, 1, 2, t + &st, zero, rx($rad * $rtod, &anchor))), 
			rvelocity(rx(
			lerp(2.3, 4, t + &st, 0, 1), 
			140 + 144 * &ind / $group))))
///

lerpmany({ 
				0 1
				4 1.1
				25 0.7
				60 0.6
				100 0.6
				140 1
			}, &rang) 


<!> type non `hello world`
<!> hp 1000
<!> photo 40
phase 0
	paction 0
		position -2 1
		async amulet-red/ <> gcrepeat {
			times _
			wait 80
			p this
		} guideempty2 p { (eloc loc) (edir dir) }
			rvelocity(lerp(0.5, 2, t, px(2), py(-2))) {
				gsrepeat {
					bindArrow
					times(11)
				} simple(dtpoffset(eloc, edir, p, pxy(
							0.6 + -0.2 * &aixd,
							0.1 * &aiyd)),
					{ dir2 @(edir, p) })
			}

///

<!> type non `hello world2`
<!> hp 4000
phase 0
	paction 0
		position 0 2
		move _ nroffset px sine 5 4 t
		async arrow-red/w <> gcr2 120 _ <> {
		} gsr2c 20 {
		} s tprot cx 2
		_ 10000 async gpather-red/w <> gcr2 120 _ <> {
		} gsr2c 20 {
		} pather 2 2 tprot cx 2 { }
		
phase 0 
	paction 0
		position 0 1
		async circle-blue/w <> gcrepeat {
			wait(30)
			times(_)
			bindItr(layer)
		} gsrepeat {
			times(60)
			circle
		} s polar
			regpoly(* 2 t, 5, &a)
			* 162.4 &layer
		

phase 0
	paction 0
		position 0 0
		async arrow-*/w <> gcrepeat {
			wait(16)
			times(_)
			rpp(<6>)
		} gsrepeat {
			times(21)
			circle
			colorf({ purple blue teal green yellow orange red }, // t 3)
		} s(rvelocity(cx(1.5)))

phase 0
	paction 0
		position 0 2
		async _ <> gcr {
			wait(30)
			times(_)
			color({ circle-** ellipse-** })
		} gsr {
			times(24)
			circle
			color({ green orange red yellow blue pink })
		} gsr {
			colorf({ /w /b }, (pred10 < &pi 12))
		} s(rvelocity(cx(2)))

phase 0
	paction 0
		position 0 2
		async circle-* <> gcr2 30 _ <> {
			color { */w */b }
		} gsr2c 30 {
			color { green orange red yellow blue pink }
		} s rvelocity cx 2
