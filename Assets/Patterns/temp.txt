pattern { }
phase 0
	action block 0
		shift-phase-to 1
		

<!> type non  `Summonables` #{
<!> hp 400000
<!> root 0 2
phase 200
	action block 0
		sync *-red* <0.5;:> gsrepeat {
			times(3)
			color { pather gpather lightning }
			circle
		} gsrepeat {
			times(6)
			spread(<100>)
			color { /b / /w }
		} pather(2, + 1 sine(1.6, 0.4, t), 
			roffset(pxy(* 1 t, sine(1, 0.2, t))), {
				hueshift(120)
		})
	

## This is phase #1. 
<!> type(non, `Hello World`)
<!> root(-2, 1)
phase(0)
	action(block, 0)
		async amulet-red/w <> gcrepeat {
			times _
			wait 120
			p this
		} gsrepeat {
			times(11)
			bindArrow
			preloop {
				rv2.rx =f + [&brv2].rx * -0.2 &aixd
				rv2.ry =f + [&brv2].ry * 0.1 &aiyd
			}
		} s rvelocity(lerp(1, 2, t, px(2), py(-2)))

	
///
<!> type non `hello world`
<!> hp 1000
phase 0
	action block 0
		position 0 2
		move _ nroffset px sine 5 4 t
		bullet-control persist arrow-red/w restyle arrow-blue/w > t 1
		beh-control persist gpather-red/w restyle gpather-blue/w > t 1
		async arrow-red/w <> gcr2 120 _ <> {
		} gsr2c 20 {
		} s tprot cx 2
		_ 10000 async gpather-red/w <> gcr2 120 _ <> {
		} gsr2c 20 {
		} pather 2 2 tprot cx 2 { }

<!> type non `hello world2`
<!> hp 4000
phase 0
	action block 0
		position 0 2
		move _ nroffset px sine 5 4 t
		async arrow-red/w <> gcr2 120 _ <> {
		} gsr2c 20 {
		} s tprot cx 2
		_ 10000 async gpather-red/w <> gcr2 120 _ <> {
		} gsr2c 20 {
		} pather 2 2 tprot cx 2 { }
		
phase 0 
	action block 0
		position 0 1
		async circle-blue/w <> gcrepeat {
			wait(30)
			times(_)
			bindItr(layer)
		} gsrepeat {
			times(60)
			circle
		} s polar
			regpoly(* 2 t, 5, &a)
			* 162.4 &layer
		

phase 0
	action block 0
		position 0 0
		async arrow-*/w <> gcrepeat {
			wait(16)
			times(_)
			rpp(<6>)
		} gsrepeat {
			times(21)
			circle
			colorf({ purple, blue, teal, green, yellow, orange, red }, // t 3)
		} s(rvelocity(cx(1.5)))

phase 0
	action block 0
		position 0 2
		async _ <> gcr {
			wait(30)
			times(_)
			color({ circle-** ellipse-** })
		} gsr {
			times(24)
			circle
			color({ green orange red yellow blue pink })
		} gsr {
			colorf({ /w /b }, (< &pi 12))
		} s(rvelocity(cx(2)))

phase 0
	action block 0
		position 0 2
		async circle-* <> gcr2 30 _ <> {
			color { */w */b }
		} gsr2c 30 {
			color { green orange red yellow blue pink }
		} s rvelocity cx 2
